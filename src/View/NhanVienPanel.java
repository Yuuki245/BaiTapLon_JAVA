/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import javax.swing.*;
import Model.*;
import java.sql.*;
import java.util.*;
import javax.swing.table.DefaultTableModel;
import DAO.*;

/**
 *
 * @author Yuuki
 */
public class NhanVienPanel extends javax.swing.JPanel {

    private User currentUser;

    /**
     * Creates new form nv_panel
     */
    public NhanVienPanel(User user) {
        this.currentUser = user;
        initComponents();
        phanQuyenTheoVaiTro();
        hienThiDanhSachNhanVien();
        cb_loai_nv.addActionListener(e -> xuLyLoaiNhanVien());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbNV = new javax.swing.JTable();
        btThem = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btSua = new javax.swing.JButton();
        btXoa = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tf_manv = new javax.swing.JTextField();
        tf_hoten = new javax.swing.JTextField();
        cb_pb = new javax.swing.JComboBox<>();
        cb_loai_nv = new javax.swing.JComboBox<>();
        tf_lcb = new javax.swing.JTextField();
        tf_ds = new javax.swing.JTextField();
        tf_hh = new javax.swing.JTextField();
        tf_ltn = new javax.swing.JTextField();
        tf_tk = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(800, 600));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tbNV.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Nhân Viên", "Họ Tên", "Phòng Ban", "Loại Nhân Viên", "Lương Cơ Bản", "Doanh Số", "Hoa Hồng", "Lương TN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbNV);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 334, 721, 221));

        btThem.setText("Thêm");
        btThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemActionPerformed(evt);
            }
        });
        add(btThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 77, 84, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 318, 721, 10));

        btSua.setText("Sửa");
        btSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSuaActionPerformed(evt);
            }
        });
        add(btSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 122, 84, -1));

        btXoa.setText("Xóa");
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });
        add(btXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 167, 84, -1));

        jButton4.setText("Sắp Xếp");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 212, 84, -1));

        jButton5.setText("Tìm Kiếm");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(481, 257, -1, -1));

        jLabel1.setText("Mã Nhân Viên");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 82, -1, -1));

        jLabel2.setText("Họ Tên");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 127, -1, -1));

        jLabel3.setText("Phòng Ban");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 172, -1, -1));

        jLabel4.setText("Loại Nhân Viên");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(55, 217, -1, -1));

        jLabel5.setText("Lương Cơ Bản");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 82, 104, -1));

        jLabel6.setText("Doanh Số");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 127, 104, -1));

        jLabel7.setText("Hoa Hồng");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 172, 104, -1));

        jLabel8.setText("Lương Trách Nhiệm");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(318, 217, -1, -1));
        add(tf_manv, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 77, 139, -1));
        add(tf_hoten, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 122, 139, -1));

        cb_pb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PB001", "PB002", "PB003", "PB004", "PB005", "PB006" }));
        add(cb_pb, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 167, 139, -1));

        cb_loai_nv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hành Chính", "Tiếp Thị", "Trưởng Phòng" }));
        cb_loai_nv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_loai_nvActionPerformed(evt);
            }
        });
        add(cb_loai_nv, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 212, 139, -1));
        add(tf_lcb, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 77, 137, -1));
        add(tf_ds, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 122, 137, -1));
        add(tf_hh, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 167, 137, -1));
        add(tf_ltn, new org.netbeans.lib.awtextra.AbsoluteConstraints(428, 212, 137, -1));

        tf_tk.setToolTipText("nhập mã nhân viên để tìm");
        add(tf_tk, new org.netbeans.lib.awtextra.AbsoluteConstraints(595, 257, 137, -1));

        jButton6.setText("Hiển Thị");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(697, 77, -1, -1));

        jButton7.setText("Xóa DL");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(697, 122, -1, -1));

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/1.jpg"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(69, 257, -1, -1));

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/2.jpg"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 257, -1, -1));

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/3.jpg"))); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 257, -1, -1));

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/4.jpg"))); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(249, 257, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/backpanel1.png"))); // NOI18N
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemActionPerformed
        // TODO add your handling code here:
        themNhanVien();
    }//GEN-LAST:event_btThemActionPerformed

    private void btSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSuaActionPerformed
        // TODO add your handling code here:
        suaNhanVien();
    }//GEN-LAST:event_btSuaActionPerformed

    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        // TODO add your handling code here:
        xoaNhanVien();
    }//GEN-LAST:event_btXoaActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        sapXepTheoLuongTangDan();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        timKiemTheoMa();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void tbNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbNVMouseClicked
        // TODO add your handling code here:
        hienThiThongTinLenForm();
    }//GEN-LAST:event_tbNVMouseClicked

    private void cb_loai_nvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_loai_nvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_loai_nvActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        tbNV.setRowSelectionInterval(0, 0);
        hienThiThongTinLenForm();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        tbNV.setRowSelectionInterval(tbNV.getRowCount() - 1, tbNV.getRowCount() - 1);
        hienThiThongTinLenForm();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        int n = tbNV.getSelectedRow();
        if (n > 0) {
            tbNV.setRowSelectionInterval(n - 1, n - 1);
        } else {
            tbNV.setRowSelectionInterval(tbNV.getRowCount() - 1, tbNV.getRowCount() - 1);
        }
        hienThiThongTinLenForm();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        int n = tbNV.getSelectedRow();
        if (n == tbNV.getRowCount() - 1) {
            tbNV.setRowSelectionInterval(0, 0);
        } else {
            tbNV.setRowSelectionInterval(n + 1, n + 1);
        }
        hienThiThongTinLenForm();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        hienThiDanhSachNhanVien();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Refresh();

    }//GEN-LAST:event_jButton7ActionPerformed
    private void phanQuyenTheoVaiTro() {
        String role = currentUser.getRole().toLowerCase();

        if (role.equals("intern")) {
            btThem.setEnabled(false);
            btSua.setEnabled(false);
            btXoa.setEnabled(false);
        } else if (role.equals("hr")) {
            // Được toàn quyền trên nhân viên
        } else if (role.equals("admin")) {
            // Full quyền
        }
    }

    public void Refresh() {
        tf_manv.setText("");
        tf_hoten.setText("");
        cb_pb.setSelectedIndex(0);
        cb_loai_nv.setSelectedIndex(0);
        tf_lcb.setText("");
        tf_hh.setText("");
        tf_ds.setText("");
        tf_ltn.setText("");
    }

    public void xuLyLoaiNhanVien() {
        String loai = cb_loai_nv.getSelectedItem().toString();
        if (loai.equalsIgnoreCase("Tiếp thị")) {
            tf_ds.setEnabled(true);
            tf_hh.setEnabled(true);
            tf_ltn.setText("");
            tf_ltn.setEnabled(false);
        } else if (loai.equalsIgnoreCase("Hành chính")) {
            tf_ds.setText("");
            tf_hh.setText("");
            tf_ltn.setText("");

            tf_ds.setEnabled(false);
            tf_hh.setEnabled(false);
            tf_ltn.setEnabled(false);
        } else if (loai.equalsIgnoreCase("Trưởng phòng")) {
            tf_ds.setText("");
            tf_hh.setText("");
            tf_ds.setEnabled(false);
            tf_hh.setEnabled(false);
            tf_ltn.setEnabled(true);
        }
    }

    public boolean kiemTraThongTinTheoLoai() {
        String loai = cb_loai_nv.getSelectedItem().toString();

        if (loai.equalsIgnoreCase("Tiếp thị")) {
            if (tf_ds.getText().trim().isEmpty() || tf_hh.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ Doanh số và Hoa hồng cho nhân viên Tiếp thị.");
                return false;
            }
        } else if (loai.equalsIgnoreCase("Trưởng phòng")) {
            if (tf_ltn.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập Lương trách nhiệm cho Trưởng phòng.");
                return false;
            }
        }

        return true;
    }

    public void hienThiThongTinLenForm() {
        int row = tbNV.getSelectedRow();
        if (row == -1) {
            return; // chưa chọn dòng nào
        }
        String ma = tbNV.getValueAt(row, 0).toString();
        String ten = tbNV.getValueAt(row, 1).toString();
        String phong = tbNV.getValueAt(row, 2).toString();
        String loai = tbNV.getValueAt(row, 3).toString();
        String lcbStr = tbNV.getValueAt(row, 4).toString();

        tf_manv.setText(ma);
        tf_hoten.setText(ten);
        for (int i = 0; i < cb_pb.getItemCount(); i++) {
            String item = cb_pb.getItemAt(i).toString().trim();
            if (item.equalsIgnoreCase(phong.trim())) {
                cb_pb.setSelectedIndex(i);
                break;
            }
        }
        for (int i = 0; i < cb_loai_nv.getItemCount(); i++) {
            String item = cb_loai_nv.getItemAt(i).toString().trim();
            if (item.equalsIgnoreCase(loai.trim())) {
                cb_loai_nv.setSelectedIndex(i);
                break;
            }
        }

        tf_lcb.setText(lcbStr);

        // Xử lý các trường riêng theo loại nhân viên
        if (loai.equalsIgnoreCase("Tiếp Thị")) {
            tf_ds.setText(tbNV.getValueAt(row, 5) != null ? tbNV.getValueAt(row, 5).toString() : "");
            tf_hh.setText(tbNV.getValueAt(row, 6) != null ? tbNV.getValueAt(row, 6).toString() : "");
            tf_ltn.setText(""); // không có
        } else if (loai.equalsIgnoreCase("Trưởng phòng")) {
            tf_ltn.setText(tbNV.getValueAt(row, 7) != null ? tbNV.getValueAt(row, 7).toString() : "");
            tf_ds.setText("");
            tf_hh.setText("");
        } else {
            tf_ds.setText("");
            tf_hh.setText("");
            tf_ltn.setText("");
        }
    }

    private void hienThiDanhSachNhanVien(List<Nhanvien> list) {
        DefaultTableModel model = (DefaultTableModel) tbNV.getModel();
        model.setRowCount(0);

        for (Nhanvien nv : list) {
            Object[] row;
            if (nv instanceof NhanVienTiepThi) {
                NhanVienTiepThi tt = (NhanVienTiepThi) nv;
                row = new Object[]{
                    nv.getMaNV(), nv.getHoTen(), nv.getPhongBan(), "Tiếp thị",
                    nv.getLuongCoBan(), tt.getDoanhSo(), tt.getHoaHong(), null
                };
            } else if (nv instanceof TruongPhong) {
                TruongPhong tp = (TruongPhong) nv;
                row = new Object[]{
                    nv.getMaNV(), nv.getHoTen(), nv.getPhongBan(), "Trưởng phòng",
                    nv.getLuongCoBan(), null, null, tp.getLuongTrachNhiem()
                };
            } else {
                row = new Object[]{
                    nv.getMaNV(), nv.getHoTen(), nv.getPhongBan(), "Hành chính",
                    nv.getLuongCoBan(), null, null, null
                };
            }
            model.addRow(row);
        }
    }

    private void hienThiDanhSachNhanVien() {
        try {
            List<Nhanvien> list = new NhanVienDAO().getAll();
            hienThiDanhSachNhanVien(list);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi hiển thị danh sách nhân viên: " + e.getMessage());
        }
    }

    private void themNhanVien() {
        try {
            String ma = tf_manv.getText().trim();
            String ten = tf_hoten.getText().trim();
            String pb = cb_pb.getSelectedItem().toString();
            String loai = cb_loai_nv.getSelectedItem().toString();
            double lcb = Double.parseDouble(tf_lcb.getText().trim());

            Nhanvien nv = null;

            // Validate trước khi tạo
            if (loai.equalsIgnoreCase("Hành chính")) {
                nv = new NhanVienHanhChinh(ma, ten, pb, lcb);
            } else if (loai.equalsIgnoreCase("Tiếp thị")) {
                String dsStr = tf_ds.getText().trim();
                String hhStr = tf_hh.getText().trim();
                if (dsStr.isEmpty() || hhStr.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Vui lòng nhập Doanh số và Hoa hồng cho Tiếp thị");
                    return;
                }
                double ds = Double.parseDouble(dsStr);
                double hh = Double.parseDouble(hhStr);
                nv = new NhanVienTiepThi(ma, ten, pb, lcb, ds, hh);
            } else if (loai.equalsIgnoreCase("Trưởng phòng")) {
                String tnStr = tf_ltn.getText().trim();
                if (tnStr.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Vui lòng nhập Lương trách nhiệm cho Trưởng phòng");
                    return;
                }
                double tn = Double.parseDouble(tnStr);
                nv = new TruongPhong(ma, ten, pb, lcb, tn);
            }

            if (nv == null) {
                JOptionPane.showMessageDialog(this, "Không thể thêm nhân viên: loại không hợp lệ hoặc dữ liệu thiếu");
                return;
            }

            new NhanVienDAO().insert(nv);
            hienThiDanhSachNhanVien();
            JOptionPane.showMessageDialog(this, "Thêm nhân viên thành công!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi thêm nhân viên: " + e.getMessage());
        }
    }

    public void suaNhanVien() {
        try {
            String ma = tf_manv.getText();
            String ten = tf_hoten.getText();
            String pb = cb_pb.getSelectedItem().toString();
            String loai = cb_loai_nv.getSelectedItem().toString();
            double lcb = Double.parseDouble(tf_lcb.getText());

            Nhanvien nv = null;

            if (loai.equalsIgnoreCase("Hành chính")) {
                nv = new NhanVienHanhChinh(ma, ten, pb, lcb);
            } else if (loai.equalsIgnoreCase("Tiếp thị")) {
                double ds = Double.parseDouble(tf_ds.getText());
                double hh = Double.parseDouble(tf_hh.getText());
                nv = new NhanVienTiepThi(ma, ten, pb, lcb, ds, hh);
            } else if (loai.equalsIgnoreCase("Trưởng phòng")) {
                double tn = Double.parseDouble(tf_ltn.getText());
                nv = new TruongPhong(ma, ten, pb, lcb, tn);
            }
            /*
            if (nv == null) {
                JOptionPane.showMessageDialog(this, "Loại nhân viên không hợp lệ hoặc chưa được chọn!");
                return;
            }
             */
            new NhanVienDAO().update(nv);
            hienThiDanhSachNhanVien();
            JOptionPane.showMessageDialog(this, "Cập nhật nhân viên thành công!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi sửa nhân viên: " + e.getMessage());
        }
    }

    public void xoaNhanVien() {
        String ma = tf_manv.getText();
        try {
            if (new NhanVienDAO().delete(ma)) {
                hienThiDanhSachNhanVien();
                JOptionPane.showMessageDialog(this, "Xoá nhân viên thành công!");
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy mã nhân viên cần xoá.");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi xoá nhân viên: " + e.getMessage());
        }
    }

    public void timKiemTheoMa() {
        String ma = tf_tk.getText();
        try {
            Nhanvien nv = new NhanVienDAO().findById(ma);
            if (nv != null) {
                List<Nhanvien> list = new ArrayList<>();
                list.add(nv);
                hienThiDanhSachNhanVien(list);
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi tìm kiếm: " + e.getMessage());
        }
    }

    public void sapXepTheoLuongTangDan() {
        try {
            List<Nhanvien> list = new NhanVienDAO().getAll();
            list.sort(Comparator.comparingDouble(Nhanvien::getLuongCoBan));
            hienThiDanhSachNhanVien(list);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi sắp xếp: " + e.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSua;
    private javax.swing.JButton btThem;
    private javax.swing.JButton btXoa;
    private javax.swing.JComboBox<String> cb_loai_nv;
    private javax.swing.JComboBox<String> cb_pb;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tbNV;
    private javax.swing.JTextField tf_ds;
    private javax.swing.JTextField tf_hh;
    private javax.swing.JTextField tf_hoten;
    private javax.swing.JTextField tf_lcb;
    private javax.swing.JTextField tf_ltn;
    private javax.swing.JTextField tf_manv;
    private javax.swing.JTextField tf_tk;
    // End of variables declaration//GEN-END:variables
}
